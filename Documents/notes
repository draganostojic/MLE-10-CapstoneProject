1) Introduction

Asad said that I look into following models and check if they have building detection class

https://ai.googleblog.com/2019/05/efficientnet-improving-accuracy-and.html

https://github.com/facebookresearch/detr

Also check if there are data sets of buildings from the street view perspective

"buildings data sets from the street view perspective"

Prepare this for tomorrow class

https://www150.statcan.gc.ca/n1/pub/18-001-x/18-001-x2021003-eng.htm

https://www.sciencedirect.com/science/article/pii/S0924271618300352

https://www.researchgate.net/publication/294427195_Entrance_Detection_from_Street-View_Images


https://vitalab.github.io/article/2018/03/01/classification-Using-Street-View.html

https://arxiv.org/abs/1802.09026

https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwiw3rbEh6L7AhVVjYkEHX2sD2Y4ChC3AnoECA8QAg&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D0qyZPIC2Q3c&usg=AOvVaw2rqksd5_lpGLw3acTzFS1n

https://medium.com/devseed/finding-vulnerable-housing-in-street-view-images-using-ai-to-create-safer-cities-2b58b4e3b991

https://drops.dagstuhl.de/opus/volltexte/2018/9368/pdf/LIPIcs-GISCIENCE-2018-40.pdf

https://livingatlas.arcgis.com/en/browse/?q=dlpk%20detection#d=2&q=dlpk%20detection



2) Data sets


https://pytorch.org/vision/stable/datasets.html

https://www.cityscapes-dataset.com/dataset-overview/

https://pytorch.org/vision/stable/generated/torchvision.datasets.Cityscapes.html#torchvision.datasets.Cityscapes

3) Platform

https://coral.ai/docs/edgetpu/faq/#what-is-the-edge-tpus-processing-speed


4) Presentation template

https://docs.google.com/presentation/d/1Hy5Uq0HdDB6HGzTIeiHgkv68GCt3hB0k/edit#slide=id.g133c1f20611_0_49


5) Corner detector on OpenCV

Corner detectors

If you think of edges as being lines, then corners are an obvious choice for features as they represent the intersection of two lines. 
One of the earlier corner detectors was introduced by Harris, and it is still a very effective corner detector that gets used quite a lot: it's reliable and it's fast. 
There's a tutorial explaining how Harris works on the OpenCV site 


https://docs.opencv.org/3.4/dc/d0d/tutorial_py_features_harris.html


https://github.com/rajasaad7/object-detection-using-yolo/blob/master/detect.py

https://www.reddit.com/r/computervision/comments/40nxxo/how_can_i_detect_whiteboards/

Transfer learning from a pre-trained base transformer NLP model to a classification model on Hugging Face and a quick POC using rapid UI protypting with Gradio
https://www.youtube.com/watch?v=1v4Ut7umOUw

6) Data set

https://drive.google.com/drive/folders/1XY9Pi75K8dW8AMOSmpwcEVvELn2ykw88

7) Labeling

https://labelstud.io/


conda activate label-studio
label-studio start
conda deactivate

Go to http://localhost:8080/user/login/

